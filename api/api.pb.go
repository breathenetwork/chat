// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api // import "github.com/breathenetwork/chat/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthType int32

const (
	AuthType_UNKNOWN_AUTH_TYPE  AuthType = 0
	AuthType_IDENTITY_AUTH_TYPE AuthType = 1
	AuthType_PASSWORD_AUTH_TYPE AuthType = 2
	AuthType_PUBKEY_AUTH_TYPE   AuthType = 3
)

var AuthType_name = map[int32]string{
	0: "UNKNOWN_AUTH_TYPE",
	1: "IDENTITY_AUTH_TYPE",
	2: "PASSWORD_AUTH_TYPE",
	3: "PUBKEY_AUTH_TYPE",
}
var AuthType_value = map[string]int32{
	"UNKNOWN_AUTH_TYPE":  0,
	"IDENTITY_AUTH_TYPE": 1,
	"PASSWORD_AUTH_TYPE": 2,
	"PUBKEY_AUTH_TYPE":   3,
}

func (x AuthType) String() string {
	return proto.EnumName(AuthType_name, int32(x))
}
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{0}
}

type Status int32

const (
	Status_UNKNOWN_STATUS Status = 0
	Status_PERMIT         Status = 1
	Status_DENY           Status = 2
)

var Status_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "PERMIT",
	2: "DENY",
}
var Status_value = map[string]int32{
	"UNKNOWN_STATUS": 0,
	"PERMIT":         1,
	"DENY":           2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{1}
}

type CommandType int32

const (
	CommandType_UNKNOWN_COMMAND_TYPE CommandType = 0
	CommandType_DISCONNECT_USER      CommandType = 1
	CommandType_SEND_USER            CommandType = 2
)

var CommandType_name = map[int32]string{
	0: "UNKNOWN_COMMAND_TYPE",
	1: "DISCONNECT_USER",
	2: "SEND_USER",
}
var CommandType_value = map[string]int32{
	"UNKNOWN_COMMAND_TYPE": 0,
	"DISCONNECT_USER":      1,
	"SEND_USER":            2,
}

func (x CommandType) String() string {
	return proto.EnumName(CommandType_name, int32(x))
}
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{2}
}

type ClientConnectedEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientConnectedEvent) Reset()         { *m = ClientConnectedEvent{} }
func (m *ClientConnectedEvent) String() string { return proto.CompactTextString(m) }
func (*ClientConnectedEvent) ProtoMessage()    {}
func (*ClientConnectedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{0}
}
func (m *ClientConnectedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConnectedEvent.Unmarshal(m, b)
}
func (m *ClientConnectedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConnectedEvent.Marshal(b, m, deterministic)
}
func (dst *ClientConnectedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConnectedEvent.Merge(dst, src)
}
func (m *ClientConnectedEvent) XXX_Size() int {
	return xxx_messageInfo_ClientConnectedEvent.Size(m)
}
func (m *ClientConnectedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConnectedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConnectedEvent proto.InternalMessageInfo

func (m *ClientConnectedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientConnectedEvent) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ClientConnectedEvent) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type ConnectedClient struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	AuthType             AuthType `protobuf:"varint,4,opt,name=auth_type,json=authType,proto3,enum=api.AuthType" json:"auth_type,omitempty"`
	AuthData             []byte   `protobuf:"bytes,5,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectedClient) Reset()         { *m = ConnectedClient{} }
func (m *ConnectedClient) String() string { return proto.CompactTextString(m) }
func (*ConnectedClient) ProtoMessage()    {}
func (*ConnectedClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{1}
}
func (m *ConnectedClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectedClient.Unmarshal(m, b)
}
func (m *ConnectedClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectedClient.Marshal(b, m, deterministic)
}
func (dst *ConnectedClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectedClient.Merge(dst, src)
}
func (m *ConnectedClient) XXX_Size() int {
	return xxx_messageInfo_ConnectedClient.Size(m)
}
func (m *ConnectedClient) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectedClient.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectedClient proto.InternalMessageInfo

func (m *ConnectedClient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConnectedClient) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ConnectedClient) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConnectedClient) GetAuthType() AuthType {
	if m != nil {
		return m.AuthType
	}
	return AuthType_UNKNOWN_AUTH_TYPE
}

func (m *ConnectedClient) GetAuthData() []byte {
	if m != nil {
		return m.AuthData
	}
	return nil
}

type ClientDisconnectedEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientDisconnectedEvent) Reset()         { *m = ClientDisconnectedEvent{} }
func (m *ClientDisconnectedEvent) String() string { return proto.CompactTextString(m) }
func (*ClientDisconnectedEvent) ProtoMessage()    {}
func (*ClientDisconnectedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{2}
}
func (m *ClientDisconnectedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientDisconnectedEvent.Unmarshal(m, b)
}
func (m *ClientDisconnectedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientDisconnectedEvent.Marshal(b, m, deterministic)
}
func (dst *ClientDisconnectedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientDisconnectedEvent.Merge(dst, src)
}
func (m *ClientDisconnectedEvent) XXX_Size() int {
	return xxx_messageInfo_ClientDisconnectedEvent.Size(m)
}
func (m *ClientDisconnectedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientDisconnectedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientDisconnectedEvent proto.InternalMessageInfo

func (m *ClientDisconnectedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClientDataEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientDataEvent) Reset()         { *m = ClientDataEvent{} }
func (m *ClientDataEvent) String() string { return proto.CompactTextString(m) }
func (*ClientDataEvent) ProtoMessage()    {}
func (*ClientDataEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{3}
}
func (m *ClientDataEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientDataEvent.Unmarshal(m, b)
}
func (m *ClientDataEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientDataEvent.Marshal(b, m, deterministic)
}
func (dst *ClientDataEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientDataEvent.Merge(dst, src)
}
func (m *ClientDataEvent) XXX_Size() int {
	return xxx_messageInfo_ClientDataEvent.Size(m)
}
func (m *ClientDataEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientDataEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientDataEvent proto.InternalMessageInfo

func (m *ClientDataEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientDataEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClientAuthEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 AuthType `protobuf:"varint,2,opt,name=type,proto3,enum=api.AuthType" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientAuthEvent) Reset()         { *m = ClientAuthEvent{} }
func (m *ClientAuthEvent) String() string { return proto.CompactTextString(m) }
func (*ClientAuthEvent) ProtoMessage()    {}
func (*ClientAuthEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{4}
}
func (m *ClientAuthEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientAuthEvent.Unmarshal(m, b)
}
func (m *ClientAuthEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientAuthEvent.Marshal(b, m, deterministic)
}
func (dst *ClientAuthEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientAuthEvent.Merge(dst, src)
}
func (m *ClientAuthEvent) XXX_Size() int {
	return xxx_messageInfo_ClientAuthEvent.Size(m)
}
func (m *ClientAuthEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientAuthEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientAuthEvent proto.InternalMessageInfo

func (m *ClientAuthEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientAuthEvent) GetType() AuthType {
	if m != nil {
		return m.Type
	}
	return AuthType_UNKNOWN_AUTH_TYPE
}

func (m *ClientAuthEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN_STATUS
}

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type BootstrapEvent struct {
	Clients              []*ConnectedClient `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BootstrapEvent) Reset()         { *m = BootstrapEvent{} }
func (m *BootstrapEvent) String() string { return proto.CompactTextString(m) }
func (*BootstrapEvent) ProtoMessage()    {}
func (*BootstrapEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{6}
}
func (m *BootstrapEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootstrapEvent.Unmarshal(m, b)
}
func (m *BootstrapEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootstrapEvent.Marshal(b, m, deterministic)
}
func (dst *BootstrapEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootstrapEvent.Merge(dst, src)
}
func (m *BootstrapEvent) XXX_Size() int {
	return xxx_messageInfo_BootstrapEvent.Size(m)
}
func (m *BootstrapEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BootstrapEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BootstrapEvent proto.InternalMessageInfo

func (m *BootstrapEvent) GetClients() []*ConnectedClient {
	if m != nil {
		return m.Clients
	}
	return nil
}

type CommandStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandStreamRequest) Reset()         { *m = CommandStreamRequest{} }
func (m *CommandStreamRequest) String() string { return proto.CompactTextString(m) }
func (*CommandStreamRequest) ProtoMessage()    {}
func (*CommandStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{7}
}
func (m *CommandStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandStreamRequest.Unmarshal(m, b)
}
func (m *CommandStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandStreamRequest.Marshal(b, m, deterministic)
}
func (dst *CommandStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandStreamRequest.Merge(dst, src)
}
func (m *CommandStreamRequest) XXX_Size() int {
	return xxx_messageInfo_CommandStreamRequest.Size(m)
}
func (m *CommandStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandStreamRequest proto.InternalMessageInfo

type DisconnectUserCommand struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectUserCommand) Reset()         { *m = DisconnectUserCommand{} }
func (m *DisconnectUserCommand) String() string { return proto.CompactTextString(m) }
func (*DisconnectUserCommand) ProtoMessage()    {}
func (*DisconnectUserCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{8}
}
func (m *DisconnectUserCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectUserCommand.Unmarshal(m, b)
}
func (m *DisconnectUserCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectUserCommand.Marshal(b, m, deterministic)
}
func (dst *DisconnectUserCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectUserCommand.Merge(dst, src)
}
func (m *DisconnectUserCommand) XXX_Size() int {
	return xxx_messageInfo_DisconnectUserCommand.Size(m)
}
func (m *DisconnectUserCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectUserCommand.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectUserCommand proto.InternalMessageInfo

func (m *DisconnectUserCommand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SendUserCommand struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendUserCommand) Reset()         { *m = SendUserCommand{} }
func (m *SendUserCommand) String() string { return proto.CompactTextString(m) }
func (*SendUserCommand) ProtoMessage()    {}
func (*SendUserCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{9}
}
func (m *SendUserCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendUserCommand.Unmarshal(m, b)
}
func (m *SendUserCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendUserCommand.Marshal(b, m, deterministic)
}
func (dst *SendUserCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendUserCommand.Merge(dst, src)
}
func (m *SendUserCommand) XXX_Size() int {
	return xxx_messageInfo_SendUserCommand.Size(m)
}
func (m *SendUserCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SendUserCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SendUserCommand proto.InternalMessageInfo

func (m *SendUserCommand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendUserCommand) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BroadcastCommand struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastCommand) Reset()         { *m = BroadcastCommand{} }
func (m *BroadcastCommand) String() string { return proto.CompactTextString(m) }
func (*BroadcastCommand) ProtoMessage()    {}
func (*BroadcastCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{10}
}
func (m *BroadcastCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastCommand.Unmarshal(m, b)
}
func (m *BroadcastCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastCommand.Marshal(b, m, deterministic)
}
func (dst *BroadcastCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastCommand.Merge(dst, src)
}
func (m *BroadcastCommand) XXX_Size() int {
	return xxx_messageInfo_BroadcastCommand.Size(m)
}
func (m *BroadcastCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastCommand.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastCommand proto.InternalMessageInfo

func (m *BroadcastCommand) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Command struct {
	Type CommandType `protobuf:"varint,1,opt,name=type,proto3,enum=api.CommandType" json:"type,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Command_DisconnectUser
	//	*Command_SendUser
	//	*Command_Broadcast
	Data                 isCommand_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{11}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

type isCommand_Data interface {
	isCommand_Data()
}

type Command_DisconnectUser struct {
	DisconnectUser *DisconnectUserCommand `protobuf:"bytes,16,opt,name=disconnect_user,json=disconnectUser,proto3,oneof"`
}
type Command_SendUser struct {
	SendUser *SendUserCommand `protobuf:"bytes,17,opt,name=send_user,json=sendUser,proto3,oneof"`
}
type Command_Broadcast struct {
	Broadcast *BroadcastCommand `protobuf:"bytes,18,opt,name=broadcast,proto3,oneof"`
}

func (*Command_DisconnectUser) isCommand_Data() {}
func (*Command_SendUser) isCommand_Data()       {}
func (*Command_Broadcast) isCommand_Data()      {}

func (m *Command) GetData() isCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Command) GetType() CommandType {
	if m != nil {
		return m.Type
	}
	return CommandType_UNKNOWN_COMMAND_TYPE
}

func (m *Command) GetDisconnectUser() *DisconnectUserCommand {
	if x, ok := m.GetData().(*Command_DisconnectUser); ok {
		return x.DisconnectUser
	}
	return nil
}

func (m *Command) GetSendUser() *SendUserCommand {
	if x, ok := m.GetData().(*Command_SendUser); ok {
		return x.SendUser
	}
	return nil
}

func (m *Command) GetBroadcast() *BroadcastCommand {
	if x, ok := m.GetData().(*Command_Broadcast); ok {
		return x.Broadcast
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Command) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Command_OneofMarshaler, _Command_OneofUnmarshaler, _Command_OneofSizer, []interface{}{
		(*Command_DisconnectUser)(nil),
		(*Command_SendUser)(nil),
		(*Command_Broadcast)(nil),
	}
}

func _Command_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Command)
	// data
	switch x := m.Data.(type) {
	case *Command_DisconnectUser:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisconnectUser); err != nil {
			return err
		}
	case *Command_SendUser:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SendUser); err != nil {
			return err
		}
	case *Command_Broadcast:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Broadcast); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Command.Data has unexpected type %T", x)
	}
	return nil
}

func _Command_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Command)
	switch tag {
	case 16: // data.disconnect_user
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DisconnectUserCommand)
		err := b.DecodeMessage(msg)
		m.Data = &Command_DisconnectUser{msg}
		return true, err
	case 17: // data.send_user
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SendUserCommand)
		err := b.DecodeMessage(msg)
		m.Data = &Command_SendUser{msg}
		return true, err
	case 18: // data.broadcast
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BroadcastCommand)
		err := b.DecodeMessage(msg)
		m.Data = &Command_Broadcast{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Command_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Command)
	// data
	switch x := m.Data.(type) {
	case *Command_DisconnectUser:
		s := proto.Size(x.DisconnectUser)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_SendUser:
		s := proto.Size(x.SendUser)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Broadcast:
		s := proto.Size(x.Broadcast)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ClientBannerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientBannerRequest) Reset()         { *m = ClientBannerRequest{} }
func (m *ClientBannerRequest) String() string { return proto.CompactTextString(m) }
func (*ClientBannerRequest) ProtoMessage()    {}
func (*ClientBannerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{12}
}
func (m *ClientBannerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBannerRequest.Unmarshal(m, b)
}
func (m *ClientBannerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBannerRequest.Marshal(b, m, deterministic)
}
func (dst *ClientBannerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBannerRequest.Merge(dst, src)
}
func (m *ClientBannerRequest) XXX_Size() int {
	return xxx_messageInfo_ClientBannerRequest.Size(m)
}
func (m *ClientBannerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBannerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBannerRequest proto.InternalMessageInfo

type ClientBannerResponse struct {
	Banner               string   `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientBannerResponse) Reset()         { *m = ClientBannerResponse{} }
func (m *ClientBannerResponse) String() string { return proto.CompactTextString(m) }
func (*ClientBannerResponse) ProtoMessage()    {}
func (*ClientBannerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_4f8728972e48260d, []int{13}
}
func (m *ClientBannerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBannerResponse.Unmarshal(m, b)
}
func (m *ClientBannerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBannerResponse.Marshal(b, m, deterministic)
}
func (dst *ClientBannerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBannerResponse.Merge(dst, src)
}
func (m *ClientBannerResponse) XXX_Size() int {
	return xxx_messageInfo_ClientBannerResponse.Size(m)
}
func (m *ClientBannerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBannerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBannerResponse proto.InternalMessageInfo

func (m *ClientBannerResponse) GetBanner() string {
	if m != nil {
		return m.Banner
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientConnectedEvent)(nil), "api.ClientConnectedEvent")
	proto.RegisterType((*ConnectedClient)(nil), "api.ConnectedClient")
	proto.RegisterType((*ClientDisconnectedEvent)(nil), "api.ClientDisconnectedEvent")
	proto.RegisterType((*ClientDataEvent)(nil), "api.ClientDataEvent")
	proto.RegisterType((*ClientAuthEvent)(nil), "api.ClientAuthEvent")
	proto.RegisterType((*Response)(nil), "api.Response")
	proto.RegisterType((*BootstrapEvent)(nil), "api.BootstrapEvent")
	proto.RegisterType((*CommandStreamRequest)(nil), "api.CommandStreamRequest")
	proto.RegisterType((*DisconnectUserCommand)(nil), "api.DisconnectUserCommand")
	proto.RegisterType((*SendUserCommand)(nil), "api.SendUserCommand")
	proto.RegisterType((*BroadcastCommand)(nil), "api.BroadcastCommand")
	proto.RegisterType((*Command)(nil), "api.Command")
	proto.RegisterType((*ClientBannerRequest)(nil), "api.ClientBannerRequest")
	proto.RegisterType((*ClientBannerResponse)(nil), "api.ClientBannerResponse")
	proto.RegisterEnum("api.AuthType", AuthType_name, AuthType_value)
	proto.RegisterEnum("api.Status", Status_name, Status_value)
	proto.RegisterEnum("api.CommandType", CommandType_name, CommandType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BreatheServerClient is the client API for BreatheServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BreatheServerClient interface {
	CommandStream(ctx context.Context, in *CommandStreamRequest, opts ...grpc.CallOption) (BreatheServer_CommandStreamClient, error)
	Bootstrap(ctx context.Context, in *BootstrapEvent, opts ...grpc.CallOption) (*Response, error)
	ClientConnected(ctx context.Context, in *ClientConnectedEvent, opts ...grpc.CallOption) (*Response, error)
	ClientDisconnect(ctx context.Context, in *ClientDisconnectedEvent, opts ...grpc.CallOption) (*Response, error)
	ClientData(ctx context.Context, in *ClientDataEvent, opts ...grpc.CallOption) (*Response, error)
	ClientAuth(ctx context.Context, in *ClientAuthEvent, opts ...grpc.CallOption) (*Response, error)
	ClientBanner(ctx context.Context, in *ClientBannerRequest, opts ...grpc.CallOption) (*ClientBannerResponse, error)
}

type breatheServerClient struct {
	cc *grpc.ClientConn
}

func NewBreatheServerClient(cc *grpc.ClientConn) BreatheServerClient {
	return &breatheServerClient{cc}
}

func (c *breatheServerClient) CommandStream(ctx context.Context, in *CommandStreamRequest, opts ...grpc.CallOption) (BreatheServer_CommandStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BreatheServer_serviceDesc.Streams[0], "/api.BreatheServer/CommandStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &breatheServerCommandStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BreatheServer_CommandStreamClient interface {
	Recv() (*Command, error)
	grpc.ClientStream
}

type breatheServerCommandStreamClient struct {
	grpc.ClientStream
}

func (x *breatheServerCommandStreamClient) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *breatheServerClient) Bootstrap(ctx context.Context, in *BootstrapEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/Bootstrap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breatheServerClient) ClientConnected(ctx context.Context, in *ClientConnectedEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/ClientConnected", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breatheServerClient) ClientDisconnect(ctx context.Context, in *ClientDisconnectedEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/ClientDisconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breatheServerClient) ClientData(ctx context.Context, in *ClientDataEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/ClientData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breatheServerClient) ClientAuth(ctx context.Context, in *ClientAuthEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/ClientAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breatheServerClient) ClientBanner(ctx context.Context, in *ClientBannerRequest, opts ...grpc.CallOption) (*ClientBannerResponse, error) {
	out := new(ClientBannerResponse)
	err := c.cc.Invoke(ctx, "/api.BreatheServer/ClientBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BreatheServerServer is the server API for BreatheServer service.
type BreatheServerServer interface {
	CommandStream(*CommandStreamRequest, BreatheServer_CommandStreamServer) error
	Bootstrap(context.Context, *BootstrapEvent) (*Response, error)
	ClientConnected(context.Context, *ClientConnectedEvent) (*Response, error)
	ClientDisconnect(context.Context, *ClientDisconnectedEvent) (*Response, error)
	ClientData(context.Context, *ClientDataEvent) (*Response, error)
	ClientAuth(context.Context, *ClientAuthEvent) (*Response, error)
	ClientBanner(context.Context, *ClientBannerRequest) (*ClientBannerResponse, error)
}

func RegisterBreatheServerServer(s *grpc.Server, srv BreatheServerServer) {
	s.RegisterService(&_BreatheServer_serviceDesc, srv)
}

func _BreatheServer_CommandStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CommandStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BreatheServerServer).CommandStream(m, &breatheServerCommandStreamServer{stream})
}

type BreatheServer_CommandStreamServer interface {
	Send(*Command) error
	grpc.ServerStream
}

type breatheServerCommandStreamServer struct {
	grpc.ServerStream
}

func (x *breatheServerCommandStreamServer) Send(m *Command) error {
	return x.ServerStream.SendMsg(m)
}

func _BreatheServer_Bootstrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).Bootstrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/Bootstrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).Bootstrap(ctx, req.(*BootstrapEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreatheServer_ClientConnected_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientConnectedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).ClientConnected(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/ClientConnected",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).ClientConnected(ctx, req.(*ClientConnectedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreatheServer_ClientDisconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientDisconnectedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).ClientDisconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/ClientDisconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).ClientDisconnect(ctx, req.(*ClientDisconnectedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreatheServer_ClientData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientDataEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).ClientData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/ClientData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).ClientData(ctx, req.(*ClientDataEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreatheServer_ClientAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientAuthEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).ClientAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/ClientAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).ClientAuth(ctx, req.(*ClientAuthEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreatheServer_ClientBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreatheServerServer).ClientBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BreatheServer/ClientBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreatheServerServer).ClientBanner(ctx, req.(*ClientBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BreatheServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BreatheServer",
	HandlerType: (*BreatheServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Bootstrap",
			Handler:    _BreatheServer_Bootstrap_Handler,
		},
		{
			MethodName: "ClientConnected",
			Handler:    _BreatheServer_ClientConnected_Handler,
		},
		{
			MethodName: "ClientDisconnect",
			Handler:    _BreatheServer_ClientDisconnect_Handler,
		},
		{
			MethodName: "ClientData",
			Handler:    _BreatheServer_ClientData_Handler,
		},
		{
			MethodName: "ClientAuth",
			Handler:    _BreatheServer_ClientAuth_Handler,
		},
		{
			MethodName: "ClientBanner",
			Handler:    _BreatheServer_ClientBanner_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CommandStream",
			Handler:       _BreatheServer_CommandStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_4f8728972e48260d) }

var fileDescriptor_api_4f8728972e48260d = []byte{
	// 775 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xc1, 0x72, 0xda, 0x48,
	0x10, 0x45, 0x82, 0xc5, 0xd0, 0x18, 0x90, 0xc7, 0xe0, 0x95, 0xd9, 0x3d, 0xb0, 0x5a, 0xd7, 0x2e,
	0xcb, 0x01, 0x76, 0x71, 0xf9, 0xb2, 0x39, 0x24, 0x80, 0x54, 0x05, 0x71, 0x59, 0x10, 0x49, 0x94,
	0xe3, 0x5c, 0xa8, 0x01, 0x4d, 0x19, 0x55, 0x82, 0xa4, 0x48, 0x83, 0x53, 0xfe, 0x89, 0xfc, 0x45,
	0x7e, 0x2e, 0x5f, 0x91, 0x62, 0xa4, 0xc1, 0x82, 0x28, 0x3e, 0xe4, 0xa6, 0xe9, 0xee, 0xf7, 0xa6,
	0xfb, 0x75, 0x4f, 0x0b, 0x8a, 0xd8, 0x77, 0x3a, 0x7e, 0xe0, 0x51, 0x0f, 0x65, 0xb1, 0xef, 0x28,
	0xaf, 0xa1, 0x36, 0xfc, 0xe0, 0x10, 0x97, 0x0e, 0x3d, 0xd7, 0x25, 0x4b, 0x4a, 0x6c, 0xed, 0x81,
	0xb8, 0x14, 0x55, 0x40, 0x74, 0x6c, 0x59, 0x68, 0x0a, 0xad, 0xa2, 0x21, 0x3a, 0x36, 0x3b, 0xfb,
	0xb2, 0x18, 0x9f, 0x7d, 0x84, 0x20, 0xe7, 0x7b, 0x01, 0x95, 0xb3, 0x4d, 0xa1, 0x55, 0x36, 0xd8,
	0xb7, 0xf2, 0x59, 0x80, 0xea, 0x8e, 0x26, 0x62, 0xfd, 0x19, 0x1e, 0xd4, 0x86, 0x22, 0xde, 0xd0,
	0xd5, 0x9c, 0x3e, 0xfa, 0x44, 0xce, 0x35, 0x85, 0x56, 0xa5, 0x57, 0xee, 0x6c, 0xf3, 0xee, 0x6f,
	0xe8, 0xca, 0x7a, 0xf4, 0x89, 0x51, 0xc0, 0xf1, 0x17, 0xfa, 0x2d, 0x8e, 0xb5, 0x31, 0xc5, 0xf2,
	0x2f, 0x4d, 0xa1, 0x75, 0x1c, 0x39, 0x55, 0x4c, 0xb1, 0xf2, 0x0f, 0xfc, 0x1a, 0xa5, 0xa1, 0x3a,
	0xe1, 0xf2, 0xd9, 0xfa, 0x94, 0x2b, 0xa8, 0xc6, 0xa1, 0x98, 0xe2, 0x74, 0x09, 0x10, 0xe4, 0xd8,
	0x2d, 0x22, 0xbb, 0x85, 0x7d, 0x2b, 0x6f, 0x39, 0x6c, 0x9b, 0x5a, 0x3a, 0xec, 0x0f, 0xc8, 0xb1,
	0x42, 0xc4, 0xb4, 0x42, 0x98, 0x6b, 0xc7, 0x9c, 0x4d, 0x30, 0xbf, 0x81, 0x82, 0x41, 0x42, 0xdf,
	0x73, 0x43, 0x82, 0xfe, 0x84, 0x7c, 0x48, 0x31, 0xdd, 0x84, 0x8c, 0xb6, 0xd2, 0x2b, 0x31, 0x12,
	0x93, 0x99, 0x8c, 0xd8, 0x85, 0x9a, 0x50, 0xb2, 0x49, 0xb8, 0x0c, 0x1c, 0x9f, 0x3a, 0x9e, 0x1b,
	0x4b, 0x9c, 0x34, 0x29, 0xaf, 0xa0, 0x32, 0xf0, 0x3c, 0x1a, 0xd2, 0x00, 0xfb, 0x51, 0xae, 0x1d,
	0x38, 0x5a, 0xb2, 0xf4, 0xb7, 0xcc, 0xd9, 0x56, 0xa9, 0x57, 0x63, 0xcc, 0x07, 0x4d, 0x34, 0x78,
	0x90, 0x72, 0x06, 0xb5, 0xa1, 0xb7, 0x5e, 0x63, 0xd7, 0x36, 0x69, 0x40, 0xf0, 0xda, 0x20, 0x1f,
	0x37, 0x24, 0xa4, 0xca, 0xdf, 0x50, 0x7f, 0x92, 0x78, 0x16, 0x92, 0x20, 0x8e, 0x4a, 0x93, 0xd9,
	0x24, 0xae, 0xfd, 0x4c, 0x48, 0xaa, 0xcc, 0x7f, 0x81, 0x34, 0x08, 0x3c, 0x6c, 0x2f, 0x71, 0x48,
	0x39, 0x8e, 0xc7, 0x09, 0x89, 0xb8, 0xaf, 0x02, 0x1c, 0x71, 0xff, 0x45, 0xac, 0x7b, 0x24, 0x99,
	0x14, 0x17, 0xc6, 0x7c, 0x09, 0xe9, 0x35, 0xa8, 0xda, 0xbb, 0xcc, 0xe7, 0x9b, 0x90, 0x04, 0xb2,
	0xd4, 0x14, 0x5a, 0xa5, 0x5e, 0x83, 0x01, 0x52, 0xab, 0x1a, 0x65, 0x8c, 0x8a, 0xbd, 0xe7, 0x40,
	0x97, 0x50, 0x0c, 0x89, 0x6b, 0x47, 0x04, 0x27, 0x8c, 0x20, 0x92, 0xf2, 0xa0, 0xda, 0x51, 0xc6,
	0x28, 0x84, 0xb1, 0x09, 0x5d, 0x41, 0x71, 0xc1, 0xab, 0x92, 0x11, 0x03, 0xd5, 0x19, 0xe8, 0xb0,
	0xd6, 0x51, 0xc6, 0x78, 0x8a, 0x1c, 0xe4, 0xa3, 0xc2, 0x95, 0x3a, 0x9c, 0x46, 0xfd, 0x19, 0x60,
	0xd7, 0x25, 0x01, 0xef, 0x45, 0x87, 0xbf, 0x68, 0x6e, 0x8e, 0x87, 0xe8, 0x0c, 0xf2, 0x0b, 0x66,
	0x89, 0xb5, 0x8e, 0x4f, 0xed, 0x7b, 0x28, 0xf0, 0x71, 0x44, 0x75, 0x38, 0x99, 0xe9, 0xd7, 0xfa,
	0xe4, 0x56, 0x9f, 0xf7, 0x67, 0xd6, 0x68, 0x6e, 0xdd, 0x4d, 0x35, 0x29, 0x83, 0xce, 0x00, 0x8d,
	0x55, 0x4d, 0xb7, 0xc6, 0xd6, 0x5d, 0xc2, 0x2e, 0x6c, 0xed, 0xd3, 0xbe, 0x69, 0xde, 0x4e, 0x0c,
	0x35, 0x61, 0x17, 0x51, 0x0d, 0xa4, 0xe9, 0x6c, 0x70, 0xad, 0x25, 0xa3, 0xb3, 0xed, 0x1e, 0xe4,
	0xa3, 0x91, 0x45, 0x08, 0x2a, 0xfc, 0x1a, 0xd3, 0xea, 0x5b, 0x33, 0x53, 0xca, 0x20, 0x80, 0xfc,
	0x54, 0x33, 0x6e, 0xc6, 0x96, 0x24, 0xa0, 0x02, 0xe4, 0x54, 0x4d, 0xbf, 0x93, 0xc4, 0xf6, 0x35,
	0x94, 0x12, 0x3d, 0x43, 0x32, 0xd4, 0x38, 0x70, 0x38, 0xb9, 0xb9, 0xe9, 0xeb, 0x2a, 0x4f, 0xf1,
	0x14, 0xaa, 0xea, 0xd8, 0x1c, 0x4e, 0x74, 0x5d, 0x1b, 0x5a, 0xf3, 0x99, 0xa9, 0x19, 0x92, 0x80,
	0xca, 0x50, 0x34, 0x35, 0x5d, 0x8d, 0x8e, 0x62, 0xef, 0x4b, 0x16, 0xca, 0x83, 0x80, 0x60, 0xba,
	0x22, 0x26, 0x09, 0x1e, 0x48, 0x80, 0xfe, 0x87, 0xf2, 0xde, 0x3c, 0xa3, 0xf3, 0xe4, 0x98, 0xec,
	0xcd, 0x78, 0xe3, 0x38, 0xe9, 0xfa, 0x57, 0x40, 0x5d, 0x28, 0xee, 0x5e, 0x13, 0x3a, 0x8d, 0xfa,
	0xb6, 0xf7, 0xba, 0x1a, 0xd1, 0x5b, 0xdf, 0x35, 0xe0, 0x05, 0xdf, 0x15, 0xbb, 0xe7, 0xc5, 0xaf,
	0x4b, 0x59, 0xc0, 0x87, 0xe0, 0x97, 0x20, 0x1d, 0xae, 0x32, 0xf4, 0x7b, 0x02, 0xfd, 0xdd, 0x86,
	0x3b, 0x24, 0xf8, 0x0f, 0xe0, 0x69, 0xc1, 0xa1, 0x5a, 0x12, 0xca, 0x37, 0xde, 0x0f, 0x21, 0xdb,
	0xf9, 0xd8, 0x83, 0xec, 0xb6, 0xdd, 0x21, 0x64, 0x08, 0xc7, 0xc9, 0xe1, 0x43, 0x72, 0x02, 0xb4,
	0x37, 0xa6, 0x8d, 0xf3, 0x14, 0x4f, 0x44, 0x32, 0xb8, 0x78, 0xa7, 0xdc, 0x3b, 0x74, 0xb5, 0x59,
	0x74, 0x96, 0xde, 0xba, 0xbb, 0x88, 0x3a, 0xe6, 0x12, 0xfa, 0xc9, 0x0b, 0xde, 0x77, 0x97, 0x2b,
	0x4c, 0xbb, 0xd8, 0x77, 0x16, 0x79, 0xf6, 0x17, 0xbb, 0xfc, 0x16, 0x00, 0x00, 0xff, 0xff, 0xd1,
	0x5c, 0xcc, 0xb1, 0xd2, 0x06, 0x00, 0x00,
}
